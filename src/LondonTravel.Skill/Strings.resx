<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommuteIntentAccountNotLinked" xml:space="preserve">
    <value>You need to link your account to be able to ask me about your commute.</value>
  </data>
  <data name="CommuteIntentCardTitle" xml:space="preserve">
    <value>Your Commute</value>
  </data>
  <data name="CommuteIntentInvalidToken" xml:space="preserve">
    <value>It looks like you've disabled account linking. You need to re-link your account to be able to ask me about your commute.</value>
  </data>
  <data name="CommuteIntentNoFavorites" xml:space="preserve">
    <value>You have not selected any favourite lines yet. Visit the London Travel website to set your preferences.</value>
  </data>
  <data name="CommuteIntentPrefixFormat" xml:space="preserve">
    <value>{0}: {1}</value>
  </data>
  <data name="DisruptionIntentCardTitle" xml:space="preserve">
    <value>Disruption Summary</value>
  </data>
  <data name="DisruptionIntentGoodServiceOnOtherLines" xml:space="preserve">
    <value>There is a good service on all other lines.</value>
  </data>
  <data name="DisruptionIntentNoDisruption" xml:space="preserve">
    <value>There is currently no disruption on the tube, London Overground, the DLR or the Elizabeth line.</value>
  </data>
  <data name="HelpIntentParagraph1" xml:space="preserve">
    <value>This skill allows you to check for the status of a specific line, or for disruption in general. You can ask about any London Underground line, London Overground, the Docklands Light Railway or the Elizabeth line.</value>
  </data>
  <data name="HelpIntentParagraph2" xml:space="preserve">
    <value>Asking about disruption in general provides information about any lines that are currently experiencing issues, such as any delays or planned closures.</value>
  </data>
  <data name="HelpIntentParagraph3" xml:space="preserve">
    <value>Asking for the status for a specific line provides a summary of the current service, such as whether there is a good service or if there are any delays.</value>
  </data>
  <data name="HelpIntentParagraph4" xml:space="preserve">
    <value>If you link your account and setup your preferences in the London Travel website, you can ask about your commute to quickly find out the status of the lines you frequently use.</value>
  </data>
  <data name="HelpIntentParagraph5" xml:space="preserve">
    <value>What would you like to do?</value>
  </data>
  <data name="InternalError" xml:space="preserve">
    <value>Sorry, something went wrong.</value>
  </data>
  <data name="LaunchResponse" xml:space="preserve">
    <value>Welcome to London Travel. You can ask me about disruption or for the status of any tube line, London Overground, the DLR or the Elizabeth line.</value>
  </data>
  <data name="LineNameWithoutPrefixFormat" xml:space="preserve">
    <value>{0}{1}</value>
  </data>
  <data name="LineNameWithPrefixFormat" xml:space="preserve">
    <value>{0}{1}{2}</value>
  </data>
  <data name="LineSuffixLower" xml:space="preserve">
    <value> line</value>
  </data>
  <data name="LineSuffixUpper" xml:space="preserve">
    <value> Line</value>
  </data>
  <data name="SessionEndResponse" xml:space="preserve">
    <value>Goodbye.</value>
  </data>
  <data name="StatusIntentCardTitleFormat" xml:space="preserve">
    <value>{0}{1} Status</value>
  </data>
  <data name="StatusIntentClosedFormat" xml:space="preserve">
    <value>{0} is closed.</value>
  </data>
  <data name="StatusIntentGoodServiceFormat" xml:space="preserve">
    <value>There is a good service on {0}.</value>
  </data>
  <data name="StatusIntentUnknownLine" xml:space="preserve">
    <value>Sorry, I am not sure what line you said. You can ask about the status of any tube line, London Overground, the DLR or the Elizabeth line.</value>
  </data>
  <data name="ThePrefix" xml:space="preserve">
    <value>the </value>
  </data>
  <data name="UnknownCommand" xml:space="preserve">
    <value>Sorry, I don't understand how to do that.</value>
  </data>
</root>